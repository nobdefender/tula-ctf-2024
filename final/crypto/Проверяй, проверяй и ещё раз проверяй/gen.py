# no secrets for you!
flag = "TulaCTF{NOt_rEALLy_GooD_Way_tO_Hide_eXpoNeNt}"

# Prime numbers
p, q = 91625582177720478485360454681689437449552066036527384100785756347311372592645668092566291435385988483828354571336556079869768466870117664476799442535180827634544860382272446477576710483271865376513307937366538994174494773960917367347480783437623003032180308961969636738555235376333687423046002371401901161723, 145981074390299327463080907565346073936315455402204104721471725452982185132719356199185917968406965790605240917420132641656510100960701023433535150013302385614689797922393725792513874737450595039749809153630536680290654368509485349102280941567173657657930246219931469938906678760094112733900821615263069915089
n = p * q

# a public exponent hidden away
def check(x):
    return 0 == x**10 - 5016649*x**9 + 10646385169383*x**8 - 12413994576676435677*x**7 + 8648142276581849007195453*x**6 - 3671739970134090890739270331707*x**5 + 933066193576736577197142460044660461*x**4 - 134994162808019369633021676120366575939279*x**3 + 10131977725944016831911340464894061224532221390*x**2 - 341162430811090610340067568004676952507439309627600*x + 4094741626342777124303635875328499186843382462071700000
e = 779553
if not check(e):
    exit(-1)

# Converting the message to an integer
m = int.from_bytes(flag.encode(), 'big')

# Encrypting the message: c = m^e mod n
inc_m = pow(m, e, n)

print(inc_m)